{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","string2","n","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":";AAAA,IAAIA,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,UAE/BE,EAAJ,8/BAoDIC,EAAU,IAEVC,EAAI,EAIJC,EAAO,SAAPA,IACAC,WAAW,WAGU,OAAdJ,EAAOE,GAEND,GAAW,OACU,MAAdD,EAAOE,GACdD,GAAW,SAGXA,GAAWD,EAAOE,GAEtBN,EAAKS,UAAYJ,EAEjBF,EAAMM,UAAYL,EAAOM,UAAU,EAAEJ,GACrCK,OAAOC,SAAS,EAAE,OAClBZ,EAAKY,SAAS,EAAE,OACZN,EAAIF,EAAOS,OAAO,IAGlBP,GAAK,EACLC,MAIN,KAENA","file":"main.19fda354.js","sourceRoot":"..\\src","sourcesContent":["let html = document.querySelector(\"#html\"); //qs可以直接跳出这个词\r\nlet style = document.querySelector(\"#style\")\r\n// 这里因为内容影响了body样式的，所以对文字进行加了注释，这样就可以执行style内容了\r\nlet string=`/*你好，我叫小白\r\n*接下来我演示一下我的前端功底\r\n*首先我要准备一个div\r\n**/\r\n#div1{\r\n    border:1px solid red;\r\n    width:200px;\r\n    height:200px;\r\n}\r\n/*接下来我要把div变成一个八卦图\r\n*注意看好了\r\n*首先，把div变成一个圆\r\n**/\r\n#div1{\r\n    border-radius:50%;\r\n    box-shadow:0 0 3px rgba(0,0,0,0.5);\r\n    border:none;\r\n}\r\n/*八卦是阴阳形成的\r\n*一黑一白\r\n**/\r\n#div1{\r\n    background:linear-gradient(90deg,rgba(255,255,255,1)0%,rgba(255,\r\n    255,255,1)50%,rgba(0,0,0,1)50%,rgba(0,0,0,1)100%);\r\n}\r\n/*加两个神秘的小球*/\r\n#div1::before{\r\n    width:100px;\r\n    height:100px;\r\n    top:0;\r\n    left:50%;\r\n    transform:translateX(-50%);\r\n    background:#000;\r\n    border-radius:50%;\r\n    background:radial-gradient(circle,rgba(255,255,255,1)0%,rgba(255,255,255,1)25%,\r\n    rgba(0,0,0,1)25%,rgba(0,0,0,1)100%);\r\n}\r\n#div1::after{\r\n    width:100px;\r\n    height:100px;\r\n    bottom:0;\r\n    left:50%;\r\n    transform:translateX(-50%);\r\n    background:#fff;\r\n    border-radius:50%;\r\n    background:radial-gradient(circle,rgba(0,0,0,1)0%,rgba(0,0,0,1)25%,\r\n    rgba(255,255,255,1)25%,rgba(255,255,255,1)100%);\r\n}\r\n`;  //用背景渐变做，搜css gradient background generator\r\n//这里的回车变空格，该如何解决了呢？把所有的回车变成html里面的回车\r\n// string = string.replace(/\\n/g,'<br>')  \r\n//replace只会把第一个回车替换成br，所以这里必须用正则表达式：/\\n/g 因为网页会出现每一行都有一个<，所以不行，重新思考新的思路\r\nlet string2 = \" \";\r\n// console.log(string.length);\r\nlet n = 0;  //因为把n=n+1挪到后面了，所以这里不需要等于-1，可以直接用0下去算\r\n\r\n// demo.innerHTML=string.substring(0,n);\r\n\r\nlet step = () =>{\r\n    setTimeout(()=>{\r\n        // console.log(n);  //n=10\r\n        // n = n + 1;\r\n        if(string[n] === \"\\n\"){\r\n            //如果是回车，就不要照搬\r\n            string2 += \"<br>\";    //这是简写，全称是string2 = string2 + \"<br>\";\r\n        } else if (string[n] === \" \"){\r\n            string2 += \"&nbsp;\";  //如果等于空格，就缩进\r\n        } else{\r\n            //如果不是回车，就照搬\r\n            string2 += string[n];   //这是简写，全称是string2 = string2 +string[n];\r\n        }\r\n        html.innerHTML = string2; //string.substring(0,n);\r\n         // length = 55,因为之前n=n+1放前面，所以结束的时候有undefined,第54是最后一为，回车\r\n        style.innerHTML = string.substring(0,n)\r\n        window.scrollTo(0,99999);   //使网页自动往下拉动滚动条，原本使(x,y)，x是横向，y是纵向\r\n        html.scrollTo(9,99999);\r\n         if(n < string.length-1){\r\n            // 因为有-1，所以这里最后一个是n=53\r\n            // 如果n不是最后一个，就继续执行\r\n            n += 1; //下一次 n=n+1是54\r\n            step();\r\n        }else{\r\n            // n 是最后一个，就停止执行\r\n        }\r\n    },50);\r\n};\r\nstep()"]}